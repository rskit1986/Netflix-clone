name: Build

on:
  push:
    branches:
      - main


jobs:
  build-analyze-scan:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

      - name: install trivy
        run: |
          #install trivy
          sudo apt-get install wget apt-transport-https gnupg lsb-release -y
          wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | gpg --dearmor | sudo tee /usr/share/keyrings/trivy.gpg > /dev/null
          echo "deb [signed-by=/usr/share/keyrings/trivy.gpg] https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main" | sudo tee -a /etc/apt/sources.list.d/trivy.list
          sudo apt-get update
          sudo apt-get install trivy -y
          #command to scan files
          trivy fs .

      - name: Docker build and push
        run: |
            #run commands to build and push docker images
            docker build --build-arg TMDB_V3_API_KEY=786842637b91e3dce0441ce411f950c5 -t netflix .
            docker tag netflix rskit1986/netflix:latest
            docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_TOKEN }}
            docker push rskit1986/netflix:latest  
        env:
            DOCKER_CLI_ACI: 1

  deploy:    
        needs: build-analyze-scan  
        runs-on: [devopvm]  #use your label here
        steps:
          - name: Pull the docker image
            run: docker pull rskit1986/netflix:latest
          - name: Trivy image scan
            run: trivy image rskit1986/netflix:latest
          - name: Run the container netflix
            run: docker run -d --name netflix -p 8081:80 rskit1986/netflix:latest

  
      # If you wish to fail your job when the Quality Gate is red, uncomment the
      # following lines. This would typically be used to fail a deployment.
      # - uses: sonarsource/sonarqube-quality-gate-action@master
      #   timeout-minutes: 5
      #   env:
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
